name: üöÄ Deploy .NET Backend to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v3

      - name: üîê Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

      - name: üöÄ SSH to VPS and deploy
        env:
          VPS_IP: ${{ secrets.VPS_IP }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
          APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
          JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          REDIS_CONNECTION: ${{ secrets.REDIS_CONNECTION }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_SMTP: ${{ secrets.EMAIL_SMTP }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}

        run: |
          ssh $VPS_USER@$VPS_IP <<EOF
            set -e

            echo "üìÅ Ki·ªÉm tra th∆∞ m·ª•c /root/deploy"
            if [ ! -d "/root/deploy/.git" ]; then
              git clone https://github.com/chuong2610/deploy.git /root/deploy
            fi

            cd /root/deploy
            git fetch origin
            git reset --hard origin/main

            echo "üìù Ghi v√†o backend/.env"
            rm -f /root/deploy/backend/.env
            echo "APP_BASE_URL=$APP_BASE_URL" > /root/deploy/backend/.env
            echo "JWT_KEY=$JWT_KEY" >> /root/deploy/backend/.env
            echo "JWT_ISSUER=$JWT_ISSUER" >> /root/deploy/backend/.env
            echo "JWT_AUDIENCE=$JWT_AUDIENCE" >> /root/deploy/backend/.env
            echo "DB_CONNECTION=$DB_CONNECTION" >> /root/deploy/backend/.env
            echo "REDIS_CONNECTION=$REDIS_CONNECTION" >> /root/deploy/backend/.env
            echo "EMAIL_FROM=$EMAIL_FROM" >> /root/deploy/backend/.env
            echo "EMAIL_USERNAME=$EMAIL_USERNAME" >> /root/deploy/backend/.env
            echo "EMAIL_PASSWORD=$EMAIL_PASSWORD" >> /root/deploy/backend/.env
            echo "EMAIL_PORT=$EMAIL_PORT" >> /root/deploy/backend/.env
            echo "EMAIL_SMTP=$EMAIL_SMTP" >> /root/deploy/backend/.env
            echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> /root/deploy/backend/.env
            echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> /root/deploy/backend/.env
            echo "FRONTEND_URL=$FRONTEND_URL" >> /root/deploy/backend/.env

            echo "‚ôªÔ∏è D·ª´ng container c≈© n·∫øu c√≥"
            docker compose down || true

            echo "üöÄ Build v√† ch·∫°y l·∫°i container"
            docker compose up -d --build

            echo "üßπ Xo√° image kh√¥ng d√πng"
            docker image prune -f

            echo "‚úÖ Tri·ªÉn khai ho√†n t·∫•t!"
          EOF

